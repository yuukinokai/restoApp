class Table
{
  unique immutable Integer tableNumber;
  Integer numberOfSeats;
  lazy Boolean isReserved;
  lazy Boolean isUsed;
  1 <@>- * Seat;
}

class Seat
{
  lazy Boolean isUsed;
}

class MenuItem
{
  name;
  Double price;
  1 -- * Order;
}

class Food
{
  enum FoodCategory{
Appetizer, MainCourse, Dessert};
  FoodCategory foodCategory;
  
  isA MenuItem;
}

class Beverage
{
  lazy Boolean isAlcohol;
  isA MenuItem;
}

class Reservation
{
  Integer seatsNeeded;
  unique immutable Integer reservationNumber;
  0..1 -- 1 Table;
}

class Order
{

  }

class IndividualBill
{
  Double totalPrice;
  lazy Boolean isPaid;
  1..* <@>- 1..* Order;
  }

class Customer
{
  name;
  Integer age;
  1 -- * IndividualBill;
  0..1 -- 0..1 Seat;
  1 -- 0..1 Reservation;
}

class Location
{
  x;
  y;
  1 -- 0..1 Table;
}

//$?[End_of_model]$?

class Table
{
  position 12 172 159 113;
  position.association Seat__Table 188,32 0,33;
}

class Seat
{
  position 269 170 131 60;
  position.association Seat__Table 0,27 159,72;
}

class MenuItem
{
  position 632 125 112 78;
  position.association MenuItem__Order 48,0 38,45;
}

class Food
{
  position 401 245 216 60;
}

class Beverage
{
  position 624 245 146 60;
}

class Reservation
{
  position 8 24 180 79;
  position.association Reservation__Table 73,79 70,0;
}

class Order
{
  position 642 24 109 45;
}

class IndividualBill
{
  position 438 21 142 78;
  position.association IndividualBill__Order 144,29 0,26;
  }

class Customer
{
  position 268 23 112 78;
  position.association Customer__IndividualBill 112,26 0,28;
  position.association Customer__Seat 55,78 55,0;
  position.association Customer__Reservation 0,31 213,30;
}

class Location
{
  position 12 325 109 78;
  position.association Location__Table 66,0 65,115;
}